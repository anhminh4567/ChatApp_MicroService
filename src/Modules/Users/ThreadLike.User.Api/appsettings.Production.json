{

  "Authentication": {
    "Authority": "https://cognito-idp.ap-southeast-2.amazonaws.com/ap-southeast-2_MMNtHJiwi",
    "BaseUrl": "https://ap-southeast-2mmnthjiwi.auth.ap-southeast-2.amazoncognito.com",
    "TokenEndpoint": "https://ap-southeast-2mmnthjiwi.auth.ap-southeast-2.amazoncognito.com/oauth2/token",
    "MetadataAddress": "https://cognito-idp.ap-southeast-2.amazonaws.com/ap-southeast-2_MMNtHJiwi/.well-known/openid-configuration",
    "ClientId": "7dn9p8ujgv7eb13o2r2e6139gn", //74it4s643ci01rvs40nrbhfmup 
    "ClientSecret": "", //mq6logpu1atbftc58097r567m6mribhi62frjbfcpoicngv5d06 , no longer needed, we use public client, for frontend, regustering
    // for the old private client, it is for when we usee webpage, and can secure store the secret
    // but now we change to SPA, 
    "RedirectUri": "http://localhost:3100/security"

  },
  "ConnectionStrings": {
    "Database": "Host=host.docker.internal;Port=5432;Database=threadlike;Username=postgres;Password=12345;Include Error Detail=true",
    "Cache": "chatappredis.eastasia.cloudapp.azure.com:6379",
    "Queue": "amqp://threadlike.queue:5672"
  },
  "Outbox": {
    "IntervalInSeconds": 15,
    "BatchSize": 50
  },
  "Inbox": {
    "IntervalInSeconds": 15,
    "BatchSize": 50
  },
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Seq",
      "Serilog.Sinks.Console",
      "Serilog.Sinks.File"
    ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Information",
        "System": "Warning",
        "ThreadLike.User.Infrastructure.Inbox": "Warning",
        "ThreadLike.User.Infrastructure.Outbox": "Warning"
      }
    },
    "WriteTo": [
      { "Name": "Console" }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId", "WithProcessId" ],
    "Properties": {
      "Application": "ThreadLike.User.Api"
    }
  },
  "Otlp": {
    "Logs": {
      "Endpoint": "http://threadlike.seq:5341"
    },
    "Metrics": {
      "ScapeEndpoint": "http://threadlike.prometheus:9464" // prometheus is inside the same compose network so no need to use host.docker.internal
    },
    "Traces": {
      "PushEndpoint": "http://threadlike.jaeger:4317"
    }
  },
  "Azure": {
    "ManageIdentityClientId": "b52b1fec-a8d1-4fa5-a9ea-5bfb216e2f9e",
    "KeyVault": {
      "BaseUrl": "https://chatapp-kv-01.vault.azure.net/"
    }
  },
  "Client": {
    "Web": "from kv"
  }
}
