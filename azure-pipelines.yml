# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

pool:
  name: Default
  # vmImage: 'ubuntu-latest'

resources:
- repo: self

variables:
  will_run_test: true
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '943ee1ee-a89f-4cff-8cfb-376003031087'
  imageRepository: 'anhminhchatappmicroservice'
  containerRegistry: 'chatappcr.azurecr.io'
  #dockeer file path
  solutionPath : '$(Build.SourcesDirectory)/ThreadLikeAppWithRealTime.sln'

  chatModulePath: '$(Build.SourcesDirectory)/src/Modules/Chats'
  userModulePath: '$(Build.SourcesDirectory)/src/Modules/Users'

  dockerfileChatModule: '$(chatModulePath)/ThreadLike.Chat.Api/Dockerfile'
  dockerfileUserModule : '$(userModulePath)/ThreadLike.User.Api/Dockerfile'
    
  tag: '$(Build.BuildId)'
  image_tag: latest

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: Test before build
  isSkippable: true
  condition: eq(variables['will_run_test'],'true')
  jobs:
    - job: 
      displayName: run test on chat module 
      steps: 
        - script: dotnet test $(solutionPath)
  
- stage: Build_And_Publish_artifact
  displayName: Build_and_push_stage
  jobs:
  - job: BuildModuleChat
    displayName: Build module Chat
    steps:
    - task: Docker@2
      displayName: Build and push module Chat to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfileChatModule)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(image_tag)

  - job: BuildModuleUser
    displayName: Build and push Module 2 image
    steps:
    - task: Docker@2
      displayName: Build and push Module user image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfileUserModule)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(image_tag)
